{
  "hash": "72b771d1b34fbff8f9f9719214ed8820",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A Short Demo Article: A Model Paper\"\nauthor:\n  - name: Pratheesh P Gopinath\n    affiliations:\n      - name: Kerala Agricultural University\n        department: Department of Agricultural Statistics\n        address: Vellayani\n        city: Trivandrum\n        country: India\n        postal-code: 695522\n      - name: Journal of Sustainable Technology in Agriculture\n    orcid: 0000-0003-3290-0436\n    email: pratheesh.pg@kau.in\n    url: https://coavellayani.kau.in/people/sub-lt-dr-pratheesh-p-gopinath\n  - name: Second Author\n    affiliations:\n      - name: Kerala Agricultural University\n        department: Department of Agricultural Statistics\n        address: Vellayani\n        city: Trivandrum\n        country: India\n        postal-code: 695522\n\nabstract: |\n  This model article is intended to demonstrate the formatting and structural style used in the *Journal of Sustainable Technology in Agriculture* (JOSTA). It outlines the essential components of a research paper, including the abstract, keywords, introduction, methodology, results, and references. The content is illustrative and not based on actual research findings. Authors may use this template to ensure that their manuscripts adhere to the journal’s formatting standards and present their work clearly and consistently.\n\nkeywords: [sample paper, sustainable agriculture, journal format, demonstration, JOSTA, R]\nbibliography: bibliography.bib\ndownloads: false\n---\n\n\n\n\n\n\n::: download-button\n<a href=\"pdfs/paper1.pdf\" class=\"btn btn-primary\" download> <i class=\"bi bi-file-pdf\"></i> Download PDF </a>\n:::\n\n## Introduction {#sec-intro}\n\nThe introduction is in principle \"as usual\". However, it should usually embed both the implemented *methods* and the *software* into the respective relevant literature. For the latter both competing and complementary software should be discussed (within the same software environment and beyond), bringing out relative (dis)advantages. All software mentioned should be properly `@cited`'d.)\n\nFor writing about software JSS requires authors to use the markup `[]{.proglang}` (programming languages and large programmable systems), `[]{.pkg}` (software packages), back ticks like \\`code\\` for code (functions, commands, arguments, etc.).\n\nModeling count variables is a common task in economics and the social sciences. The classical Poisson regression model for count data is often of limited use in these disciplines because empirical count data sets typically exhibit overdispersion and/or an excess number of zeros. The former issue can be addressed by extending the plain Poisson regression model in various directions: e.g., using sandwich covariances or estimating an additional dispersion parameter (in a so-called quasi-Poisson model). Another more formal way is to use a negative binomial (NB) regression. All of these models belong to the family of generalized linear models (GLMs). However, although these models typically can capture overdispersion rather well, they are in many applications not sufficient for modeling excess zeros. Since there is increased interest in zero-augmented models that address this issue by a second model component capturing zero counts. An overview of count data models in econometrics, including hurdle and zero-inflated models, is provided in @CameronTrivedi2013.\n\nIn [R]{.proglang} @R, GLMs are provided by the model fitting functions [glm]{.fct} in the [stats]{.pkg} package and [glm.nb]{.fct} in the [MASS]{.pkg} package [@VenablesRipley2002] along with associated methods for diagnostics and inference. The manuscript that this document is based on [@ZeileisKleiberJackman2008] then introduced hurdle and zero-inflated count models in the functions [hurdle]{.fct} and [zeroinfl]{.fct} in the [pcsl]{.pkg} package @Jackman2015. Of course, much more software could be discussed here, including (but not limited to) generalized additive models for count data as available in the [R]{.proglang} packages [mgcv]{.pkg} @Wood2006, [gamlss]{.pkg} @StasinopoulosRigby2007, or [VGAM]{.pkg} @Yee2009.\n\n## Materials and methods {#sec-models}\n\nThe basic Poisson regression model for count data is a special case of the GLM framework @McCullaghNelder1989. It describes the dependence of a count response variable $y_i$ ($i = 1, \\dots, n$) by assuming a Poisson distribution $y_i \\sim \\mathrm{Pois}(\\mu_i)$. The dependence of the conditional mean $E[y_i \\, | \\, x_i] = \\mu_i$ on the regressors $x_i$ is then specified via a log link and a linear predictor\n\n$$\n\\log(\\mu_i) \\quad = \\quad x_i^\\top \\beta,\n$$ {#eq-mean}\n\nwhere the regression coefficients $\\beta$ are estimated by maximum likelihood (ML) using the iterative weighted least squares (IWLS) algorithm.\n\nTODO: Note that around the equation above there should be no spaces (avoided in the code by `%` lines) so that \"normal\" spacing is used and not a new paragraph started. [R]{.proglang} provides a very flexible implementation of the general GLM framework in the function [glm]{.fct} @ChambersHastie1992 in the [stats]{.pkg} package. Its most important arguments are\n\n``` r\nglm(formula, data, subset, na.action, weights, offset,\n  family = gaussian, start = NULL, control = glm.control(…),\n  model = TRUE, y = TRUE, x = FALSE, …)\n```\n\nwhere `formula` plus `data` is the now standard way of specifying regression relationships in [R]{.proglang}/[S]{.proglang} introduced in @ChambersHastie1992. The remaining arguments in the first line (`subset`, `na.action`, `weights`, and `offset`) are also standard for setting up formula-based regression models in [R]{.proglang}/[S]{.proglang}. The arguments in the second line control aspects specific to GLMs while the arguments in the last line specify which components are returned in the fitted model object (of class [glm]{.class} which inherits from [lm]{.class}). For further arguments to [glm]{.fct} (including alternative specifications of starting values) see `?glm`. For estimating a Poisson model `family = poisson` has to be specified.\n\nAs the synopsis above is a code listing that is not meant to be executed, one can use either the dedicated `{Code}` environment or a simple `{verbatim}` environment for this. Again, spaces before and after should be avoided.\n\nFinally, there might be a reference to a `{table}` such as @tbl-overview. Usually, these are placed at the top of the page (`[t!]`), centered (`\\centering`), with a caption below the table, column headers and captions in sentence style, and if possible avoiding vertical lines.\n\n| Type | Distribution | Method | Description |\n|------------|------------|------------|--------------------------------------|\n| GLM | Poisson | ML | Poisson regression: classical GLM, estimated by maximum likelihood (ML) |\n|  |  | Quasi | \"Quasi-Poisson regression'': same mean function, estimated by quasi-ML (QML) or equivalently generalized estimating equations (GEE), inference adjustment via estimated dispersion parameter |\n|  |  | Adjusted | \"Adjusted Poisson regression'': same mean function, estimated by QML/GEE, inference adjustment via sandwich covariances |\n|  | NB | ML | NB regression: extended GLM, estimated by ML including additional shape parameter |\n| Zero-augmented | Poisson | ML | Zero-inflated Poisson (ZIP), hurdle Poisson |\n|  | NB | ML | Zero-inflated NB (ZINB), hurdle NB |\n\n: Overview of various count regression models. The table is usually placed at the top of the page (`[t!]`), centered (`centering`), has a caption below the table, column headers and captions are in sentence style, and if possible vertical lines should be avoided. {#tbl-overview}\n\n## Illustrations {#sec-illustrations}\n\nFor a simple illustration of basic Poisson and NB count regression the `quine` data from the [MASS]{.pkg} package is used. This provides the number of `Days` that children were absent from school in Australia in a particular year, along with several covariates that can be employed as regressors. The data can be loaded by\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nand a basic frequency distribution of the response variable is displayed in @fig-quine.\n\nFor code input and output, the style files provide dedicated environments. Either the \"agnostic\" `{CodeInput}` and `{CodeOutput}` can be used or, equivalently, the environments `{Sinput}` and `{Soutput}` as produced by [Sweave]{.fct} or [knitr]{.pkg} when using the `render_sweave()` hook. Please make sure that all code is properly spaced, e.g., using `y = a + b * x` and *not* `y=a+b*x`. Moreover, code input should use \"the usual\" command prompt in the respective software system. For [R]{.proglang} code, the prompt `R>` should be used with `+` as the continuation prompt. Generally, comments within the code chunks should be avoided -- and made in the regular text instead. Finally, empty lines before and after code input/output should be avoided (see above).\n\n::: {#fig-quine}\n![](figures/article-visualization.pdf)\n\nFrequency distribution for number of days absent from school.\n:::\n\nAs a first model for the `quine` data, we fit the basic Poisson regression model. (Note that JSS prefers when the second line of code is indented by two spaces.)\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nTo account for potential overdispersion we also consider a negative binomial GLM.\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nIn a comparison with the BIC the latter model is clearly preferred.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n       df      BIC\nm_pois 18 2046.851\nm_nbin 19 1157.235\n```\n\n\n:::\n:::\n\n\n\n\n\n\nHence, the full summary of that model is shown below.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm.nb(formula = Days ~ (Eth + Sex + Age + Lrn)^2, data = quine, \n    init.theta = 1.60364105, link = log)\n\nCoefficients: (1 not defined because of singularities)\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  3.00155    0.33709   8.904  < 2e-16 ***\nEthN        -0.24591    0.39135  -0.628  0.52977    \nSexM        -0.77181    0.38021  -2.030  0.04236 *  \nAgeF1       -0.02546    0.41615  -0.061  0.95121    \nAgeF2       -0.54884    0.54393  -1.009  0.31296    \nAgeF3       -0.25735    0.40558  -0.635  0.52574    \nLrnSL        0.38919    0.48421   0.804  0.42153    \nEthN:SexM    0.36240    0.29430   1.231  0.21818    \nEthN:AgeF1  -0.70000    0.43646  -1.604  0.10876    \nEthN:AgeF2  -1.23283    0.42962  -2.870  0.00411 ** \nEthN:AgeF3   0.04721    0.44883   0.105  0.91622    \nEthN:LrnSL   0.06847    0.34040   0.201  0.84059    \nSexM:AgeF1   0.02257    0.47360   0.048  0.96198    \nSexM:AgeF2   1.55330    0.51325   3.026  0.00247 ** \nSexM:AgeF3   1.25227    0.45539   2.750  0.00596 ** \nSexM:LrnSL   0.07187    0.40805   0.176  0.86019    \nAgeF1:LrnSL -0.43101    0.47948  -0.899  0.36870    \nAgeF2:LrnSL  0.52074    0.48567   1.072  0.28363    \nAgeF3:LrnSL       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Negative Binomial(1.6036) family taken to be 1)\n\n    Null deviance: 235.23  on 145  degrees of freedom\nResidual deviance: 167.53  on 128  degrees of freedom\nAIC: 1100.5\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  1.604 \n          Std. Err.:  0.214 \n\n 2 x log-likelihood:  -1062.546 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Results {#sec-summary}\n\nThe adoption of the drip irrigation system resulted in a significant increase in crop yield across all tested farms. On average, yield improved by 22.5% compared to the traditional irrigation method (Table 1). The mean water usage per hectare decreased from 5,200 liters to 3,400 liters, indicating a 34.6% reduction in water consumption. Figure 1 shows the comparative yield performance of crops under both irrigation systems.\n\nAdditionally, soil moisture levels remained more stable throughout the crop cycle in the drip-irrigated plots, contributing to improved plant health and uniformity.\n\n## Discussion {.unnumbered}\n\nThe results demonstrate that implementing drip irrigation can enhance both productivity and resource efficiency in smallholder farming systems. The observed increase in yield aligns with previous findings by Sharma et al. (2021), who reported a 20–30% improvement under similar agro-climatic conditions. The reduction in water usage is particularly relevant in regions facing water scarcity, supporting the sustainability goals promoted under national agricultural missions.\n\nWhile the initial setup cost of drip irrigation was noted as a barrier by some farmers during field interviews, the improved yield and water savings suggest a positive return on investment over two to three cropping seasons. Future studies could explore economic modeling of drip system subsidies and long-term soil health impacts.\n\n## Acknowledgments {.unnumbered}\n\n::: callout\nAll acknowledgments (note the AE spelling) should be collected in this unnumbered section before the references. It may contain the usual information about funding and feedback from colleagues/reviewers/etc. Furthermore, information such as relative contributions of the authors may be added here (if any).\n:::\n\n## References {.unnumbered}\n\n::: {#refs}\n:::\n\n\n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n\n\n\n\n## Technical details {#sec-techdetails .unnumbered}\n\n::: callout\nAppendices can be included after the bibliography (with a page break). Each section within the appendix should have a proper section title (rather than just *Appendix*).\n\nFor more technical style details, please check out JSS's style FAQ at \\[https://www.jstatsoft.org/pages/view/style#frequently-asked-questions\\] which includes the following topics:\n\n-   Title vs. sentence case.\n-   Graphics formatting.\n-   Naming conventions.\n-   Turning JSS manuscripts into [R]{.proglang} package vignettes.\n-   Trouble shooting.\n-   Many other potentially helpful details…\n:::\n",
    "supporting": [
      "paper1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}